// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/login": {
            "get": {
                "security": [
                    {
                        "csrf-token": []
                    }
                ],
                "description": "验证用户登录是否成功",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "校验"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-CSRF-TOKEN",
                        "name": "csrf-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "password",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\":200,\"data\":{},\"message\":\"ok\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"status\":400,\"data\":{},\"message\":\"bad request\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "{\"status\":401,\"data\":{},\"message\":\"forbidden\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/refresh_token": {
            "get": {
                "security": [
                    {
                        "csrf-token": []
                    },
                    {
                        "authorization": []
                    }
                ],
                "description": "更新login后获取的jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "校验"
                ],
                "summary": "刷新 jwt token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "X-CSRF-TOKEN",
                        "name": "csrf-token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer xxx",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"status\":200,\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJSb2xlIjoiYWEiLCJVc2VySUQiOiJnc2hhYWEiLCJVc2VybmFtZSI6ImdzaCIsImV4cCI6MTU5ODQ1MzAyMywib3JpZ19pYXQiOjE1OTg0NDk0MjMsInRlc3RLZXkiOiIifQ.lY7eeTtIyO9eexpmEAWh8s196MGiFpJR-xjiFgdlRLA\",\"expire\":\"2020-08-26T22:43:43+08:00\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "{\"status\":401,\"data\":{},\"message\":\"token is expired\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getCSRF": {
            "get": {
                "description": "用户第一次访问后端服务器时，需要获取 CSRF Token",
                "tags": [
                    "校验"
                ],
                "summary": "获取 CSRF Token",
                "responses": {
                    "200": {
                        "description": "{\"status\":200,\"message\":\"CSRF token is in response header\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"status\":400,\"message\":\"CSRF token mismatch\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "adminActions.UserRequsetBody": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
